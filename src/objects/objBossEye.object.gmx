<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>sprBossEye</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Attach to each boss
HP=30;
timeOut = 4000; //Suicide if the player doesn't manage to kill this in time
image_speed = 0;
image_index = 2;
active = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !(global.state = states.startRoom &amp;&amp; active &amp;&amp; image_index!=2)
{
    global.playerScore += 2500;
    ///Upon destruction, depending which game loop we're on, fire some extra bullets

    var bulletsToFire=3;
    switch(objMain.loopCounter)
    {
        case 0: bulletsToFire=0; break;
        case 1: bulletsToFire=0; break;
        case 2: bulletsToFire=1; break;
        case 3: bulletsToFire=2; break;
        case 4: bulletsToFire=3; break;
        case 5: bulletsToFire=4; break;
    }
    
    for (var i=bulletsToFire; i&gt;0; i--)
    {
        var thisEnemyBullet = instance_create(x,y,objEnemyBullet);
        thisEnemyBullet.direction = direction - irandom(15) + irandom(20);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Always look at the player
if instance_exists(objPlayer)
{
direction = point_direction(x, y, objPlayer.x, objPlayer.y);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Enemy skeleton and weapon interaction
if instance_exists(objBoss1)
{active = objBoss1.enabled;}

if (active)
{
    
    if HP&lt;15 &amp;&amp; timeOut&gt;500
    {
        image_index = 1;
    }
    else if HP&gt;=15 &amp;&amp; timeOut&gt;500
    {
        image_index = 0;
    }
    else
    {
        image_index = 2; //The boss is about to die in 500 frames or less
    }
    
    timeOut--;
    
    var inst;
    inst = instance_place(x, y, objBullet);
    if inst != noone
       {    HP -= objBullet.bulletStrength;
       with (inst) {instance_destroy();}
       }
    
    if (HP&lt;=0 || timeOut &lt;= 0)
    {
        thisExplosion = instance_create(x,y,obj16x16Explosion);
        thisExplosion.wasRed = false; //objBossEye spawns a 16x16 explosion, but we shouldn't drop a red capsule
        instance_destroy();
    }
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objPlayer">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!objPlayer.dead)
{
    if (x&lt;=objCamera.x+objCamera.scrollX+objCamera.viewportWidth-4)
    {
        if (image_index != 2)
        {
        HP--;
        audio_stop_sound(sfxBarrierWeaken);
        audio_play_sound(sfxBarrierWeaken,0,false);
        }
        if (!objCamera.debug)
        {
        objPlayer.dead = true;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objMissile">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Handle colissions
if (x&lt;=objCamera.x+objCamera.scrollX+objCamera.viewportWidth-4)
{
    if (image_index != 2)
    {
    HP-=other.bulletStrength;
    audio_stop_sound(sfxBarrierWeaken);
    audio_play_sound(sfxBarrierWeaken,0,false);
    }
    with (other)
    {instance_destroy();}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objLaser">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Handle colissions
if (x&lt;=objCamera.x+objCamera.scrollX+objCamera.viewportWidth-4)
{
    if (image_index != 2)
    {
    HP-=other.bulletStrength;
    audio_stop_sound(sfxBarrierWeaken);
    audio_play_sound(sfxBarrierWeaken,0,false);
    }
    with (other)
    {length-=3;} //Instead of destroying the whole laser, just shorten its length
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objFrontShield">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Handle colissions
if (x&lt;=objCamera.x+objCamera.scrollX+objCamera.viewportWidth-4)
{
    if (image_index != 2)
    {
    HP-=other.bulletStrength;
    audio_stop_sound(sfxBarrierWeaken);
    audio_play_sound(sfxBarrierWeaken,0,false);
    }
    with (other)
    {HP--;}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objDouble">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Handle colissions
if (x&lt;=objCamera.x+objCamera.scrollX+objCamera.viewportWidth-4)
{
    if (image_index != 2)
    {
    HP-=other.bulletStrength;
    audio_stop_sound(sfxBarrierWeaken);
    audio_play_sound(sfxBarrierWeaken,0,false);
    }
    with (other)
    {instance_destroy();}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objBullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Handle colissions
if (x&lt;=objCamera.x+objCamera.scrollX+objCamera.viewportWidth-4)
{
    if (image_index != 2)
    {
    HP-=other.bulletStrength;
    audio_stop_sound(sfxBarrierWeaken);
    audio_play_sound(sfxBarrierWeaken,0,false);
    }
    with (other)
    {instance_destroy();}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
