<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr16x16</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Determine a target player to look at.
var player1 = findPlayer(objPlayer1);

if (instance_exists(objPlayer2))
{
    var player2 = findPlayer(objPlayer2);
    
    switch(irandom(objMain.currPlayers))
    {
        default:
        case 0:
            target = player1;
            break;
        case 1:
            target = player2;
            break;
    }
}
else
{
    target = player1;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///This obj is a generic enemy parent
//Smaller enemies like objLion should use this, but
//Unless you want bosses to behave exactly like the other enemies do,
//You should make them individuals from this parent (e.g. Boss can die from mega crash)
//Red capsules and score are handled in the actual enemy's Destroy event. (See objLion for reference)
HP=1;
isolatedNum=0; //For grouped enemies (like objBean)
silentKill=false;
hitTimer = 0;
hitTimerSet = 10;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Upon destruction, depending which game loop we're on, fire some extra bullets
if (!silentKill)
{
    var bulletsToFire=3;
    switch(objMain.loopCounter)
    {
        case 0: bulletsToFire=0; break;
        case 1: bulletsToFire=0; break;
        case 2: bulletsToFire=1; break;
        case 3: bulletsToFire=2; break;
        case 4: bulletsToFire=3; break;
        case 5: bulletsToFire=4; break;
    }
    
    for (var i=bulletsToFire; i&gt;0; i--)
    {
        var thisEnemyBullet = instance_create(x,y,objEnemyBullet);
        thisEnemyBullet.direction = direction - irandom(15) + irandom(20);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Enemy skeleton and weapon interaction

if (global.state == states.gameMode)
{active=true;}
else
{active=false;}

if (active)
{
var inst;
inst = instance_place(x, y, objBullet);
if inst != noone
   {    HP -= objBullet.bulletStrength;
   with (inst) {instance_destroy();}
   }

if HP&lt;=0
{
    instance_destroy();
}
    
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Disable this sprite if it's too far off the camera
if (x&gt;objCamera.x+objCamera.scrollX+objCamera.viewportWidth+32)
{
    active = false;
}
else if (y&gt;objCamera.y+objCamera.scrollY+objCamera.viewportHeight+64)
{
    active = false;
}
else
{
    active = true;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Always look at the player

with (target)
{
    if (!dead)
    {
        other.direction = point_direction(other.x, other.y, x, y);
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Mega Crash
if (objPlayer.excTimer&gt;0)
{
    if (x &gt;= objCamera.x &amp;&amp;
        x &lt;= objCamera.x+objCamera.viewportWidth &amp;&amp;
        y &gt;= objCamera.y &amp;&amp;
        y &lt;= objCamera.y+objCamera.viewportHeight)
    {
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objSpreadExplosion">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Handle colissions
if (x&lt;=objCamera.x+objCamera.scrollX+objCamera.viewportWidth-4 &amp;&amp; hitTimer&lt;=0)
{
    HP-=other.bulletStrength;
    hitTimer=hitTimerSet;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objPlayer">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!other.dead)
{
    if (x&lt;=objCamera.x+objCamera.scrollX+objCamera.viewportWidth-4 &amp;&amp; hitTimer&lt;=0)
    {
        HP--;
        hitTimer = hitTimerSet;
        if (!objCamera.debug) &amp;&amp; other.invincibilityFrames&lt;=0
        {
            if other.HP&gt;1
            {
                audio_stop_sound(sfxBarrierWeaken);
                audio_play_sound(sfxBarrierWeaken,0,false);
            }
            other.HP--;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objMissile">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Handle colissions
if (x&lt;=objCamera.x+objCamera.scrollX+objCamera.viewportWidth-4)
{
    HP-=other.bulletStrength;
    with (other)
    {
        if (objMain.missileType != 4) //Photon Torpedo
        {
            instance_destroy();
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objLaser">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Handle colissions
if (x&lt;=objCamera.x+objCamera.scrollX+objCamera.viewportWidth-4)
{
    if (hitTimer&lt;=0)
    {
        HP-=other.bulletStrength;
        hitTimer=hitTimerSet;
    }
    
    if (!(objMain.laserType==2 || objMain.laserType==4))
    {
        with (other)
        {length-=3;} //Instead of destroying the whole laser, just shorten its length
    }
    else
    {
        with (other)
        {instance_destroy();}
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objFrontShield">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Handle colissions
if (x&lt;=objCamera.x+objCamera.scrollX+objCamera.viewportWidth-4)
{
    if (other.foundPlayer)
    {
        HP-=other.bulletStrength;
        with (other)
        {
        HP--;
        audio_stop_sound(sfxBarrierWeaken);
        audio_play_sound(sfxBarrierWeaken,0,false);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objDouble">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Handle colissions
if (x&lt;=objCamera.x+objCamera.scrollX+objCamera.viewportWidth-4)
{
    HP-=other.bulletStrength;
    with (other)
    {instance_destroy();}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objBullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Handle colissions
if (x&lt;=objCamera.x+objCamera.scrollX+objCamera.viewportWidth-4)
{
    HP-=other.bulletStrength;
    with (other)
    {instance_destroy();}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
