<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objEnemyParent</parentName>
  <maskName>sprBossBarrier</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
///Declare some variables
active = false;
HP = 16;
myID = 0;
silentKill=false;
groupID = 0;
hitTimer = 0;
hitTimerSet = 10;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Upon destruction, depending which game loop we're on, fire some extra bullets
if (!silentKill)
{
    var bulletsToFire=3;
    switch(objMain.loopCounter)
    {
        case 0: bulletsToFire=0; break;
        case 1: bulletsToFire=0; break;
        case 2: bulletsToFire=1; break;
        case 3: bulletsToFire=2; break;
        case 4: bulletsToFire=3; break;
        case 5: bulletsToFire=4; break;
    }
    
    for (var i=bulletsToFire; i&gt;0; i--)
    {
        var thisEnemyBullet = instance_create(x,y,objEnemyBullet);
        thisEnemyBullet.direction = direction - irandom(15) + irandom(20);
    }
    
    //Give the player score
    global.playerScore += 100;
    audio_stop_sound(sfxEnemyDestroyed);
    audio_play_sound(sfxEnemyDestroyed,1,false);
    thisExplosion = instance_create(x,y,obj16x16Explosion);
    thisExplosion.wasRed = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Always look at the player
if instance_exists(objPlayer)
{
direction = point_direction(x, y, objPlayer.x, objPlayer.y);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Enemy skeleton and weapon interaction

if instance_exists(objBoss1)
{active=objBoss1.enabled;}

if (active)
{
var inst;
inst = instance_place(x, y, objBullet);
if inst != noone
   {    HP -= objBullet.bulletStrength;
   with (inst) {instance_destroy();}
   }

if HP&lt;=0
{
    instance_destroy();
}
    
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Mega Crash
if (active)
{
    if (objPlayer.excTimer&gt;0)
    {
        if (x &gt;= objCamera.x &amp;&amp;
            x &lt;= objCamera.x+objCamera.viewportWidth &amp;&amp;
            y &gt;= objCamera.y &amp;&amp;
            y &lt;= objCamera.y+objCamera.viewportHeight)
        {
            instance_destroy();
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destroy if we don't have a group...
if (groupID&lt;=0)
{
    silentKill=true;
    instance_destroy();
}

hitTimer--;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objSpreadExplosion">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Handle colissions
if (compareBarrierGroup())
{
    if (active &amp;&amp; !objBossParent.dead &amp;&amp; hitTimer&lt;=0)
    {
        if (x&lt;=objCamera.x+objCamera.scrollX+objCamera.viewportWidth-4)
        {
            HP-=other.bulletStrength;
            hitTimer = hitTimerSet;
            audio_stop_sound(sfxBarrierWeaken);
            audio_play_sound(sfxBarrierWeaken,0,false);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objPlayer">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Handle colissions
if (active &amp;&amp; !objBossParent.dead)
{
    if (!objPlayer.dead)
    {
        if (x&lt;=objCamera.x+objCamera.scrollX+objCamera.viewportWidth-4 &amp;&amp; hitTimer&lt;=0)
        {
            if (compareBarrierGroup())
            {
            HP--;
            hitTimer = hitTimerSet;
            }
        }
    }
}
if (!objBossParent.dead &amp;&amp; objPlayer.HP&gt;1)
{
    audio_stop_sound(sfxBarrierWeaken);
    audio_play_sound(sfxBarrierWeaken,0,false);
}
if (!objCamera.debug)
{
    audio_stop_sound(sfxBarrierWeaken);
    audio_play_sound(sfxBarrierWeaken,0,false);
    objPlayer.HP--;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objMissile">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Handle colissions
if (compareBarrierGroup())
{
    if (active &amp;&amp; !objBossParent.dead)
    {
        if (x&lt;=objCamera.x+objCamera.scrollX+objCamera.viewportWidth-4)
        {
            HP-=other.bulletStrength;
            audio_stop_sound(sfxBarrierWeaken);
            audio_play_sound(sfxBarrierWeaken,0,false);
        }
    }
    with (other)
    {instance_destroy();}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objLaser">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Handle colissions
if (compareBarrierGroup())
{
    if (active &amp;&amp; !objBossParent.dead &amp;&amp; hitTimer&lt;=0)
    {
        if (x&lt;=objCamera.x+objCamera.scrollX+objCamera.viewportWidth-4)
        {
            HP-=other.bulletStrength;
            hitTimer = hitTimerSet;
            audio_stop_sound(sfxBarrierWeaken);
            audio_play_sound(sfxBarrierWeaken,0,false);
        }
    }
    with (other)
    {length-=3;} //Instead of destroying the whole laser, just shorten its length
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objFrontShield">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Handle colissions
if (compareBarrierGroup())
{
    if (other.foundPlayer)
    {
        if (active &amp;&amp; !objBossParent.dead)
        {
            if (x&lt;=objCamera.x+objCamera.scrollX+objCamera.viewportWidth-4)
            {
                HP-=other.bulletStrength;
                audio_stop_sound(sfxBarrierWeaken);
                audio_play_sound(sfxBarrierWeaken,0,false);
            }
        }
        with (other)
        {
                HP--;
                audio_stop_sound(sfxBarrierWeaken);
                audio_play_sound(sfxBarrierWeaken,0,false);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objDouble">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Handle colissions
if (compareBarrierGroup())
{
    if (active &amp;&amp; !objBossParent.dead)
    {
        if (x&lt;=objCamera.x+objCamera.scrollX+objCamera.viewportWidth-4)
        {
            HP-=other.bulletStrength;
            audio_stop_sound(sfxBarrierWeaken);
            audio_play_sound(sfxBarrierWeaken,0,false);
        }
    }
    with (other)
    {instance_destroy();}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objBullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Handle colissions
if (compareBarrierGroup())
{
    if (active &amp;&amp; !objBossParent.dead)
    {
        if (x&lt;=objCamera.x+objCamera.scrollX+objCamera.viewportWidth-4)
        {
            HP-=other.bulletStrength;
            audio_stop_sound(sfxBarrierWeaken);
            audio_play_sound(sfxBarrierWeaken,0,false);
        }
    }
    with (other)
    {instance_destroy();}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
